
services:
  postgres:
    image: postgres:15-alpine
    container_name: midcurve-postgres
    environment:
      POSTGRES_DB: midcurve_dev
      POSTGRES_USER: midcurve
      POSTGRES_PASSWORD: dev123
      POSTGRES_INITDB_ARGS: "--no-locale --encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U midcurve -d midcurve_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  arbitrum-fork:
    build: ./docker/arbitrum-fork
    container_name: midcurve-arbitrum-fork
    env_file:
      - .env.local
    # Optional gezielt Ã¼berschreiben/aktivieren:
    environment:
      FUND_ON_START: "1"                        # Funding einschalten
      TEST_ACCOUNT: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
      PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
      WETH_ADDRESS: "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"
      USDC_ADDRESS: "0xaf88d065e77c8cC2239327C5EDb3A432268e5831"
      USDC_WHALE: "0x47c031236e19d024b42f8AE6780E44A573170703"
      USDC_AMOUNT_6D: "100000000000"           # 100,000 * 10^6
      WETH_AMOUNT_ETH: "30"
    ports:
      - "8545:8545"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "printf '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"web3_clientVersion\",\"params\":[]}' | curl -fsS -H 'Content-Type: application/json' --data @- http://127.0.0.1:8545 > /dev/null"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

volumes:
  postgres_data: